//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_entrega_2.ServicioDeArchivos {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDeArchivos.IServicioDeArchivos")]
    public interface IServicioDeArchivos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDeArchivos/cargarUsuarios", ReplyAction="http://tempuri.org/IServicioDeArchivos/cargarUsuariosResponse")]
        bool cargarUsuarios(string archivo, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDeArchivos/cargarUsuarios", ReplyAction="http://tempuri.org/IServicioDeArchivos/cargarUsuariosResponse")]
        System.Threading.Tasks.Task<bool> cargarUsuariosAsync(string archivo, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDeArchivos/FindAllSolicitantes", ReplyAction="http://tempuri.org/IServicioDeArchivos/FindAllSolicitantesResponse")]
        WCF.SolicitanteDTO[] FindAllSolicitantes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDeArchivos/FindAllSolicitantes", ReplyAction="http://tempuri.org/IServicioDeArchivos/FindAllSolicitantesResponse")]
        System.Threading.Tasks.Task<WCF.SolicitanteDTO[]> FindAllSolicitantesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDeArchivos/FindAllProyectos", ReplyAction="http://tempuri.org/IServicioDeArchivos/FindAllProyectosResponse")]
        WCF.ProyectoDTO[] FindAllProyectos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDeArchivos/FindAllProyectos", ReplyAction="http://tempuri.org/IServicioDeArchivos/FindAllProyectosResponse")]
        System.Threading.Tasks.Task<WCF.ProyectoDTO[]> FindAllProyectosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioDeArchivosChannel : MVC_entrega_2.ServicioDeArchivos.IServicioDeArchivos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioDeArchivosClient : System.ServiceModel.ClientBase<MVC_entrega_2.ServicioDeArchivos.IServicioDeArchivos>, MVC_entrega_2.ServicioDeArchivos.IServicioDeArchivos {
        
        public ServicioDeArchivosClient() {
        }
        
        public ServicioDeArchivosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioDeArchivosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioDeArchivosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioDeArchivosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool cargarUsuarios(string archivo, string tipo) {
            return base.Channel.cargarUsuarios(archivo, tipo);
        }
        
        public System.Threading.Tasks.Task<bool> cargarUsuariosAsync(string archivo, string tipo) {
            return base.Channel.cargarUsuariosAsync(archivo, tipo);
        }
        
        public WCF.SolicitanteDTO[] FindAllSolicitantes() {
            return base.Channel.FindAllSolicitantes();
        }
        
        public System.Threading.Tasks.Task<WCF.SolicitanteDTO[]> FindAllSolicitantesAsync() {
            return base.Channel.FindAllSolicitantesAsync();
        }
        
        public WCF.ProyectoDTO[] FindAllProyectos() {
            return base.Channel.FindAllProyectos();
        }
        
        public System.Threading.Tasks.Task<WCF.ProyectoDTO[]> FindAllProyectosAsync() {
            return base.Channel.FindAllProyectosAsync();
        }
    }
}
